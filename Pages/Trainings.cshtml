@page
@model TrainingsModel
@{
    ViewData["Title"] = "Trainings";
}

<div class="container">
    <h3>List of trainings</h3>
    <div class="row">
        <div class="col-4">
            <div class="list-group" id="list-tab" role="tablist">
                @foreach (var item in Model.Trainings)
                {
                    <a class="list-group-item list-group-item-action" id="@item.Id" data-toggle="list"
                        onclick="onClickListItem('@item.Id', '@item.Description')">
                        @item.Name
                    </a>
                }
            </div>
        </div>
        <div class="col-8">
            <h4>Description</h4>
            <p id="trainingListContentDescription">No training selected.</p>

            <!-- List of all sets -->
            <div id="list-setsList">
                @foreach (var training in Model.Trainings)
                {
                    <div class="list-group list-group-root well" id="sets-@training.Id" hidden>
                        <!-- training' sets-->
                        @for (int i = 0; i < training.Sets.Count; i++)
                        {
                            var set = training.Sets.ElementAt(i);
                            var setNumber = i + 1;

                            <a href="#sets-@set.Id" class="list-group-item" data-toggle="collapse">
                                <i class="glyphicon glyphicon-chevron-right"></i>Set @setNumber
                            </a>
                           
                            <div class="list-group collapse" id="sets-@set.Id">
                                <p class="list-group-item">Repetitions: @set.Repetition</p>
                                <p class="list-group-item">Rest time (in s): @set.RestTime</p>
                                <a href="#setItems-@set.Id" class="list-group-item" data-toggle="collapse">
                                    <i class="glyphicon glyphicon-chevron-right"></i>Exercises
                                </a>

                                <div class="list-group collapse" id="setItems-@set.Id">
                                    @for (int j = 0; j < set.SetItems.Count; j++)
                                    {
                                        var setItem = set.SetItems.ElementAt(j);

                                        <div class="list-group-item">
                                            <p>Name: @setItem.Exercise.Name</p>
                                            <p>Description: @setItem.Exercise.Description</p>

                                            @if (setItem.Exercise.Hold)
                                            {
                                                <p>Duration: @setItem.Duration</p>
                                            }
                                            else
                                            {
                                                <p>Repetitions: @setItem.Repetition</p>
                                            }
                                        </div>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<div class="container">
    <h3>Create a new training</h3>
    <div class="row">
        <div class="col-4">
            <form asp-page-handler="create" method="post">
                <div class="form-group">
                    <label for="trainingInputName">Name</label>
                    <input type="text" class="form-control" id="trainingInputName" asp-for="NewTraining.Name">
                </div>
                <div class="form-group">
                    <label for="trainingInputDescription">Description</label>
                    <textarea type="text" class="form-control" id="trainingInputDescription" asp-for="NewTraining.Description"></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
                <button type="button" class="btn btn-secondary" id="editSetsModalButton">Edit Set(s)</button>
            </form>
        </div>
        <div class="col-8 verticalLine" id="setsPreview">
            <!-- Sets and exercises preview -->
            <p>Sets Preview</p>
        </div>
    </div>
</div>

<!-- Edit Set Modal -->
<div class="modal fade" id="editSetsModal" tabindex="-1" role="dialog" aria-labelledby="editSetsModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editSetsModalLabel">Edit Set(s)</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <form asp-page-handler="edit">
                <div class="modal-body">
                    
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/newglyphicon.css" />
    <link href="@Url.Content("~/css/trainings.css")" rel="stylesheet" type="text/css" />
}

@section Scripts {
    <script>
        $('#editSetsModal').modal({ show: false });

        function onClickListItem(id, description) {
            var pDescription = document.getElementById("trainingListContentDescription");
            pDescription.innerHTML = description;

            // Reset hidden attribute for all elements
            var listSetsList = document.getElementById("list-setsList").children;
            for (let setsList in listSetsList) {
                setsList['hidden'] = true;
            }

            // Show training sets
            var trainingSetPath = '#sets-' + id;
            $(trainingSetPath).removeAttr('hidden');
        }

        $(function () {
            $('.list-group-item').on('click', function () {
                $('.glyphicon', this)
                    .toggleClass('glyphicon-chevron-right')
                    .toggleClass('glyphicon-chevron-down');
            });
        });

        function onSetUpdate() {
            console.log("TOTO");
        }
      
        $('#editSetsModalButton').on('click', function (event) {
            event.preventDefault()
            $('#editSetsModal').modal('show');
        });
    </script>
}
